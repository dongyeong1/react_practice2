{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/dong/nodebird/prepare/front/component/PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    return state.user.me && state.user.me.id;\n  });\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFromOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFromOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 32\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 89\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), //popover는 ...에 마우스올렸을때 더보기뜨는것\n    __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00 \"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments //item은 post.Comments안에있는 요소하나하나\n    ,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 26\n        }\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 38\n          }\n        }, item.User.nickname[0]),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 30\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  })));\n};\n\n_s(PostCard, \"e2De5Isv4gIuzeQs0p/iADJRjIs=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/component/PostCard.js"],"names":["React","useCallback","useState","PropTypes","useSelector","Card","Button","Avatar","Popover","List","Comment","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","PostImages","CommentForm","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpened","setCommentFromOpened","onToggleLike","prev","onToggleComment","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React,{useCallback, useState} from 'react';\nimport PropTypes from 'prop-types'\nimport { useSelector } from 'react-redux';\nimport { Card, Button, Avatar, Popover,List,Comment} from 'antd';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\n\nconst PostCard=({post})=> {\n    const id =useSelector((state)=>state.user.me && state.user.me.id)\n\n    const[liked,setLiked]=useState(false);\n    const [commentFormOpened,setCommentFromOpened]=useState(false)\n\n    const onToggleLike=useCallback(()=>{\n        setLiked((prev)=>!prev)\n    },[])\n\n    const onToggleComment =useCallback(()=>{\n        setCommentFromOpened((prev)=>!prev)\n    },[])\n  return (\n    <div style={{marginBottom:10}}>\n      <Card\n      cover={post.Images[0] && <PostImages images={post.Images} />}\n      \n      actions={[\n        <RetweetOutlined key=\"retweet\" />,\n        liked?<HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike}/>:<HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n        <MessageOutlined key=\"message\"  onClick={onToggleComment} />,\n        //popover는 ...에 마우스올렸을때 더보기뜨는것\n        <Popover\n          key=\"ellipsis\"\n          content={(\n            <Button.Group>\n              {id && post.User.id === id\n                ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\">삭제</Button>\n                  </>\n                )\n                : <Button>신고</Button>}\n            </Button.Group>\n          )}\n        >\n          <EllipsisOutlined />\n        </Popover>,\n      ]}\n      >\n          <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n          />\n          </Card>\n          {commentFormOpened && (\n              <div>\n                  <CommentForm post={post} />\n                  <List\n                     header={`${post.Comments.length}개의 댓글 `}\n                     itemLayout='horizontal'\n                     dataSource={post.Comments}\n                     //item은 post.Comments안에있는 요소하나하나\n                     renderItem={(item)=>(\n                         <li>\n                             <Comment \n                             author={item.User.nickname}\n                             avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                             content={item.content}\n                              />\n\n                             \n                         </li>\n                     )}\n                  />\n              </div>\n          )}\n        {/* <Image /> */}\n        {/* <Content /> */}\n        {/* <Buttons />  */}\n      \n        {/* <CommentForm/> */}\n        {/* <Comment/> */}\n    </div>\n  )\n}\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n      id: PropTypes.number,\n      User: PropTypes.object,\n      content: PropTypes.string,\n      createdAt: PropTypes.object,\n      Comments: PropTypes.arrayOf(PropTypes.object),\n      Images: PropTypes.arrayOf(PropTypes.object),\n    }).isRequired,\n  };\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/dong/nodebird/prepare/front/component/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\nimport useInput from '../hooks/useInput';\n\nfunction PostForm() {\n  const imageInput = useRef();\n  const [text, onChangeText, setText] = useInput('');\n  const {\n    addPostDone\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const dispatch = useDispatch();\n  const {\n    imagePaths\n  } = useSelector(state => state.post);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onSubmit = useCallback(() => {\n    const formData = new FormData();\n    formData.append('content', text);\n    console.log('textss', text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    }); // setText('');\n  }, [text]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4\\uC77C\\uC774\\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0\\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: v,\n    style: {\n      width: '200px'\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })))));\n}\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/component/PostForm.js"],"names":["React","useCallback","useRef","useEffect","Form","Input","Button","useDispatch","useSelector","addPost","ADD_POST_REQUEST","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","useInput","PostForm","imageInput","text","onChangeText","setText","addPostDone","state","post","dispatch","imagePaths","onClickImageUpload","current","click","onSubmit","formData","FormData","append","console","log","type","data","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React,{useCallback,useRef, useEffect} from 'react';\nimport {Form,Input,Button} from 'antd'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {addPost} from '../reducers/post'\n\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\n\nimport useInput from '../hooks/useInput';\n\n\nfunction PostForm() {\n\n    const imageInput=useRef();\n    const[text,onChangeText,setText]=useInput('')\n\n\n    const {addPostDone}=useSelector((state)=>state.post)\n\n    \n\n    useEffect(()=>{\nif(addPostDone){\n    setText('')\n}\n    },[addPostDone])\n\n    const dispatch=useDispatch();\n    const {imagePaths} =useSelector((state)=>state.post)\n    \n\n\n    const onClickImageUpload=useCallback(()=>{\n        imageInput.current.click()\n    },[imageInput.current])\n\n    const onSubmit=useCallback(()=>{\n        const formData = new FormData();\n        formData.append('content', text);\n        console.log('textss',text)\n        dispatch({\n            type: ADD_POST_REQUEST,\n            data: formData,       \n        })\n        // setText('');\n\n    },[text])\n\n  return (\n      <Form style={{margin:'10px 0 20px'}} encType='multipart/form-data' onFinish={onSubmit}>\n        <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder='어떤일이있었나요?' />\n        <div>\n            <input type=\"file\" multiple hidden ref={imageInput} />\n                <Button onClick={onClickImageUpload}>이미지업로드</Button>\n                <Button type=\"primary\" htmlType=\"submit\" style={{float:'right'}}>짹짹</Button>\n            \n            \n        </div>\n        <div>\n            {imagePaths.map((v)=>(\n                <div key={v} style={{display:'inline-block'}}>\n                    <img src={v} style={{width:'200px'}} alt={v}></img>\n                </div>\n            ))}\n        </div>\n        \n      </Form>\n  );\n}\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}
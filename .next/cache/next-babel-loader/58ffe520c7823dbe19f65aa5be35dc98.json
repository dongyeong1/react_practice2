{"ast":null,"code":"import { Result } from 'antd';\nimport { actionChannel, all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport signup from '../pages/signup';\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../reducers/user';\n\nfunction logInAPI() {// return axios.post('/api/post')\n}\n\nfunction* login(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {// return axios.post('/api/post')\n}\n\nfunction* logout() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI() {// return axios.post('/api/post')\n}\n\nfunction* signUp() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {// return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {// return axios.post('/api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/sagas/user.js"],"names":["Result","actionChannel","all","delay","fork","put","takeLatest","signup","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","logInAPI","login","action","type","data","err","error","response","logOutAPI","logout","signUpAPI","signUp","followAPI","follow","console","unfollowAPI","unfollow","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { Result } from 'antd';\nimport { actionChannel, all, delay, fork, put, takeLatest} from 'redux-saga/effects'\nimport signup from '../pages/signup';\n\nimport {\n    FOLLOW_FAILURE,\n    FOLLOW_REQUEST,\n    FOLLOW_SUCCESS,\n    LOG_IN_FAILURE,\n    LOG_IN_REQUEST,\n    LOG_IN_SUCCESS,\n    LOG_OUT_FAILURE,\n    LOG_OUT_REQUEST,\n    LOG_OUT_SUCCESS,\n    SIGN_UP_FAILURE,\n    SIGN_UP_REQUEST,\n    SIGN_UP_SUCCESS,\n    UNFOLLOW_FAILURE,\n    UNFOLLOW_REQUEST,\n    UNFOLLOW_SUCCESS,\n  } from '../reducers/user';\n  \n\nfunction logInAPI(){\n    // return axios.post('/api/post')\n}\n\nfunction* login(action){\n    try{\n        yield delay(1000);\n        yield put({\n            type:LOG_IN_SUCCESS,\n            data:action.data\n        })\n    }\n    catch(err){\n        yield put({\n            type:LOG_IN_FAILURE,\n            error:err.response.data,\n             \n        })\n    }\n\n}\n\nfunction logOutAPI(){\n    // return axios.post('/api/post')\n}\n\nfunction* logout(){\n    try{\n        yield delay(1000);\n        yield put({\n            type:LOG_OUT_SUCCESS,\n        })\n    }catch(err){\n        yield put({\n            type:LOG_OUT_FAILURE,\n            error:err.response.data,\n             \n        })\n    }\n\n}\n\nfunction signUpAPI(){\n    // return axios.post('/api/post')\n}\n\n\nfunction* signUp(){\n    try{\n        yield delay(1000);\n        yield put({\n            type:SIGN_UP_SUCCESS,\n        })\n    }catch(err){\n        yield put({\n            type:SIGN_UP_FAILURE,\n            error:err.response.data,\n             \n        })\n    }\n\n}\n\nfunction followAPI() {\n    // return axios.post('/api/follow');\n  }\n  \n  function* follow(action) {\n    try {\n      // const result = yield call(followAPI);\n      yield delay(1000);\n      yield put({\n        type: FOLLOW_SUCCESS,\n        data: action.data,\n      });\n    } catch (err) {\n      console.error(err);\n      yield put({\n        type: FOLLOW_FAILURE,\n        error: err.response.data,\n      });\n    }\n  }\n  \n  function unfollowAPI() {\n    // return axios.post('/api/unfollow');\n  }\n  \n  function* unfollow(action) {\n    try {\n      // const result = yield call(unfollowAPI);\n      yield delay(1000);\n      yield put({\n        type: UNFOLLOW_SUCCESS,\n        data: action.data,\n      });\n    } catch (err) {\n      console.error(err);\n      yield put({\n        type: UNFOLLOW_FAILURE,\n        error: err.response.data,\n      });\n    }\n  }\n\nfunction* watchFollow() {\n    yield takeLatest(FOLLOW_REQUEST, follow);\n  }\n  \n  function* watchUnfollow() {\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n  }\n\nfunction* watchLogIn(){\n    yield takeLatest(LOG_IN_REQUEST,login)\n\n}\nfunction* watchLogOut(){\n    yield takeLatest(LOG_OUT_REQUEST,logout)\n}\n\nfunction* watchSignUp(){\n    yield takeLatest(SIGN_UP_REQUEST,signUp)\n}\n\n\nexport default function* userSaga(){\n    yield all([\n        fork(watchFollow),\n        fork(watchUnfollow),\n        fork(watchLogIn),\n        fork(watchLogOut),\n        fork(watchSignUp),\n    ])\n}"]},"metadata":{},"sourceType":"module"}
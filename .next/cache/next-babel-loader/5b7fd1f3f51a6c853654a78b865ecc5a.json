{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '김동영'\n    },\n    content: '첫 번째 게시글',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우와 개정판이 나왔군요~'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '얼른 사고싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: 2,\n    content: data,\n    User: {\n      id: 1,\n      nickname: '황현종'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","reducer","state","action","error"],"mappings":"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","sourcesContent":["export const initialState={\n    mainPosts: [{\n        id: 1,\n        User: {\n          id: 1,\n          nickname: '김동영',\n        },\n        content: '첫 번째 게시글',\n        Images: [{\n          src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n        }, {\n          src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n        }, {\n          src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n        }],\n        Comments: [{\n          User: {\n            nickname: 'nero',\n          },\n          content: '우와 개정판이 나왔군요~',\n        }, {\n          User: {\n            nickname: 'hero',\n          },\n          content: '얼른 사고싶어요~',\n        }]\n      }],\n      imagePaths: [],\n      addPostLoading:false,\n      addPostDone:false,\n      addPostError:null,\n      addCommentLoading:false,\n      addCommentDone:false,\n      addCommentError:null,\n    }\n\nexport const ADD_POST_REQUEST ='ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS ='ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE ='ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const addPost=(data)=>{\n   return{\n    type :ADD_POST_REQUEST,\n    data\n   }\n}\n\nexport const addComment=(data)=>{\n  return{\n   type :ADD_COMMENT_REQUEST,\n   data\n  }\n}\n\n\nconst dummyPost =(data)=>( {\n    id: 2,\n    content: data,\n    User: {\n      id: 1,\n      nickname: '황현종',\n    },\n    Images: [],\n    Comments: [],\n  });\n  \n\n\n\nconst reducer=(state=initialState,action)=>{\n    switch(action.type){\n        case ADD_POST_REQUEST:\n            return{\n              ...state,\n              addPostLoading:true,\n              addPostDone:false,\n              addPostError:null\n                \n\n            }\n            case ADD_POST_SUCCESS:\n              return{\n                ...state,\n                mainPosts:[dummyPost(action.data),...state.mainPosts],\naddPostLoading:false,\naddPostDone:true\n              }\n              case ADD_POST_FAILURE:\n                return{\n                  ...state,\n                  addPostLoading:false,\n                  addPostError:action.error\n  \n                  \n                }\n                case ADD_COMMENT_REQUEST:\n                  return{\n                    ...state,\n                    addCommentLoading:true,\n                    addCommentDone:false,\n                    addCommentError:null\n                      \n      \n                  }\n                  case ADD_COMMENT_SUCCESS:\n                    return{\n                      ...state,\n                      mainPosts:[dummyPost,...state.mainPosts],\n      addCommentLoading:false,\n      addCommentDone:true\n                    }\n                    case ADD_COMMENT_FAILURE:\n                      return{\n                        ...state,\n                        addCommentLoading:false,\n                        addCommentError:action.error\n        \n                        \n                      }\n        default:\n            return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}
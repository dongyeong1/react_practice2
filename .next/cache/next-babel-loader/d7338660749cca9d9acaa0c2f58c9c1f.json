{"ast":null,"code":"import { Result } from 'antd';\nimport { actionChannel, all, delay, fork, put, takeLatest } from 'redux-saga/effects';\n\nfunction logInAPI() {// return axios.post('/api/post')\n}\n\nfunction* login(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE'\n    });\n  }\n}\n\nfunction logOutAPI() {// return axios.post('/api/post')\n}\n\nfunction* logout() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE'\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', login);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logout);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/sagas/user.js"],"names":["Result","actionChannel","all","delay","fork","put","takeLatest","logInAPI","login","action","type","data","err","logOutAPI","logout","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,SAASC,aAAT,EAAwBC,GAAxB,EAA6BC,KAA7B,EAAoCC,IAApC,EAA0CC,GAA1C,EAA+CC,UAA/C,QAAgE,oBAAhE;;AAEA,SAASC,QAAT,GAAmB,CACf;AACH;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAuB;AACnB,MAAG;AACC,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNK,MAAAA,IAAI,EAAC,gBADC;AAENC,MAAAA,IAAI,EAACF,MAAM,CAACE;AAFN,KAAD,CAAT;AAIH,GAND,CAMC,OAAMC,GAAN,EAAU;AACP,UAAMP,GAAG,CAAC;AACNK,MAAAA,IAAI,EAAC;AADC,KAAD,CAAT;AAIH;AAEJ;;AAED,SAASG,SAAT,GAAoB,CAChB;AACH;;AAED,UAAUC,MAAV,GAAkB;AACd,MAAG;AACC,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNK,MAAAA,IAAI,EAAC;AADC,KAAD,CAAT;AAGH,GALD,CAKC,OAAME,GAAN,EAAU;AACP,UAAMP,GAAG,CAAC;AACNK,MAAAA,IAAI,EAAC;AADC,KAAD,CAAT;AAIH;AAEJ;;AAED,UAAUK,UAAV,GAAsB;AAClB,QAAMT,UAAU,CAAC,gBAAD,EAAkBE,KAAlB,CAAhB;AAEH;;AAED,UAAUQ,WAAV,GAAuB;AACnB,QAAMV,UAAU,CAAC,iBAAD,EAAmBQ,MAAnB,CAAhB;AACH;;AAED,eAAe,UAAUG,QAAV,GAAoB;AAC/B,QAAMf,GAAG,CAAC,CACNE,IAAI,CAACW,UAAD,CADE,EAENX,IAAI,CAACY,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { Result } from 'antd';\nimport { actionChannel, all, delay, fork, put, takeLatest} from 'redux-saga/effects'\n\nfunction logInAPI(){\n    // return axios.post('/api/post')\n}\n\nfunction* login(action){\n    try{\n        yield delay(1000);\n        yield put({\n            type:'LOG_IN_SUCCESS',\n            data:action.data\n        })\n    }catch(err){\n        yield put({\n            type:'LOG_IN_FAILURE',\n             \n        })\n    }\n\n}\n\nfunction logOutAPI(){\n    // return axios.post('/api/post')\n}\n\nfunction* logout(){\n    try{\n        yield delay(1000);\n        yield put({\n            type:'LOG_OUT_SUCCESS',\n        })\n    }catch(err){\n        yield put({\n            type:'LOG_OUT_FAILURE',\n             \n        })\n    }\n\n}\n\nfunction* watchLogIn(){\n    yield takeLatest('LOG_IN_REQUEST',login)\n\n}\n\nfunction* watchLogOut(){\n    yield takeLatest('LOG_OUT_REQUEST',logout)\n}\n\nexport default function* userSaga(){\n    yield all([\n        fork(watchLogIn),\n        fork(watchLogOut),\n    ])\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/dong/nodebird/prepare/front/component/FollowButton.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\nconst FollowButton = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    followingLoading,\n    unFollowingLoading\n  } = useSelector(state => state.user);\n  const isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(v => v.id === post.User.id);\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n  return __jsx(Button, {\n    loading: followingLoading || unFollowingLoading,\n    onClick: onClickButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, isFollowing ? '언팔로우' : '팔로우');\n};","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/component/FollowButton.js"],"names":["React","useCallback","Button","PropTypes","useSelector","useDispatch","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","post","dispatch","me","followingLoading","unFollowingLoading","state","user","isFollowing","Followings","find","v","id","User","onClickButton","type","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,WAAd,QAAgC,OAAhC;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,cAAT,EAAwBC,gBAAxB,QAAgD,kBAAhD;;AAEA,MAAMC,YAAY,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAU;AACzB,QAAMC,QAAQ,GAACL,WAAW,EAA1B;AACA,QAAM;AAACM,IAAAA,EAAD;AAAIC,IAAAA,gBAAJ;AAAqBC,IAAAA;AAArB,MAAyCT,WAAW,CAAEU,KAAD,IAASA,KAAK,CAACC,IAAhB,CAA1D;AACA,QAAMC,WAAW,GAACL,EAAD,aAACA,EAAD,uBAACA,EAAE,CAAEM,UAAJ,CAAeC,IAAf,CAAqBC,CAAD,IAAKA,CAAC,CAACC,EAAF,KAAOX,IAAI,CAACY,IAAL,CAAUD,EAA1C,CAAlB;AACA,QAAME,aAAa,GAACrB,WAAW,CAAC,MAAI;AAChC,QAAGe,WAAH,EAAe;AACXN,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAChB,gBADA;AAELiB,QAAAA,IAAI,EAACf,IAAI,CAACY,IAAL,CAAUD;AAFV,OAAD,CAAR;AAKH,KAND,MAMK;AACDV,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAACjB,cADA;AAELkB,QAAAA,IAAI,EAACf,IAAI,CAACY,IAAL,CAAUD;AAFV,OAAD,CAAR;AAIH;AACJ,GAb8B,EAa7B,CAACJ,WAAD,CAb6B,CAA/B;AAeA,SACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,gBAAgB,IAAIC,kBAArC;AAAyD,IAAA,OAAO,EAAES,aAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,WAAW,GAAG,MAAH,GAAU,KAD1B,CADJ;AAKH,CAxBD","sourcesContent":["import React,{useCallback} from 'react';\nimport {Button} from 'antd'\nimport PropTypes from 'prop-types'\nimport { useSelector,useDispatch } from 'react-redux';\nimport { FOLLOW_REQUEST,UNFOLLOW_REQUEST } from '../reducers/user';\n\nconst FollowButton=({post})=>{\n    const dispatch=useDispatch();\n    const {me,followingLoading,unFollowingLoading}=useSelector((state)=>state.user)\n    const isFollowing=me?.Followings.find((v)=>v.id===post.User.id)\n    const onClickButton=useCallback(()=>{\n        if(isFollowing){\n            dispatch({\n                type:UNFOLLOW_REQUEST,\n                data:post.User.id,\n            })\n        \n        }else{\n            dispatch({\n                type:FOLLOW_REQUEST,\n                data:post.User.id,\n            });\n        }\n    },[isFollowing])\n\n    return(\n        <Button loading={followingLoading || unFollowingLoading} onClick={onClickButton}>\n            {isFollowing ? '언팔로우':'팔로우'}\n        </Button>\n    )\n}"]},"metadata":{},"sourceType":"module"}
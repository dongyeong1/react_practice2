{"ast":null,"code":"var _jsxFileName = \"/Users/dong/nodebird/prepare/front/component/CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nfunction CommetForm({\n  post\n}) {\n  const dispatch = useDispatch();\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onChangeCommentText, setValue] = useInput('');\n  const onSubmitComment = useCallback(() => {\n    console.log('ssssssssss');\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  useEffect(() => {\n    if (addCommentDone) {\n      setValue('');\n    }\n  }, [addCommentDone]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0,\n      zIndex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    loading: addCommentLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"\\uC9F9\\uC9F9\")));\n}\n\nCommetForm.PropTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommetForm;","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/component/CommentForm.js"],"names":["React","useCallback","useEffect","Form","Input","Button","PropTypes","useInput","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommetForm","post","dispatch","addCommentDone","addCommentLoading","state","id","user","me","commentText","onChangeCommentText","setValue","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","zIndex","right","bottom","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAoBC,MAApB,QAAiC,MAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA4B;AAExB,QAAMC,QAAQ,GAAEJ,WAAW,EAA3B;AACA,QAAM;AAACK,IAAAA,cAAD;AAAgBC,IAAAA;AAAhB,MAAmCP,WAAW,CAAEQ,KAAD,IAASA,KAAK,CAACJ,IAAhB,CAApD;AACA,QAAMK,EAAE,GAACT,WAAW,CAAEQ,KAAD;AAAA;;AAAA,6BAASA,KAAK,CAACE,IAAN,CAAWC,EAApB,mDAAS,eAAeF,EAAxB;AAAA,GAAD,CAApB;AAEA,QAAM,CAACG,WAAD,EAAaC,mBAAb,EAAiCC,QAAjC,IAA2Cf,QAAQ,CAAC,EAAD,CAAzD;AAEA,QAAMgB,eAAe,GAACtB,WAAW,CAAC,MAAI;AAClCuB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEAZ,IAAAA,QAAQ,CAAC;AACLa,MAAAA,IAAI,EAAChB,mBADA;AAELiB,MAAAA,IAAI,EAAC;AACDC,QAAAA,OAAO,EAACR,WADP;AAEDS,QAAAA,MAAM,EAACjB,IAAI,CAACK,EAFX;AAGDa,QAAAA,MAAM,EAACb;AAHN;AAFA,KAAD,CAAR;AASH,GAZgC,EAY/B,CAACG,WAAD,EAAaH,EAAb,CAZ+B,CAAjC;AAcAf,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGY,cAAH,EAAkB;AACdQ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAJQ,EAIP,CAACR,cAAD,CAJO,CAAT;AAMA,SAGF,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAACQ,MAAAA,QAAQ,EAAC,UAAV;AAAsBC,MAAAA,MAAM,EAAC,CAA7B;AAAgCC,MAAAA,MAAM,EAAC;AAAvC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEb,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,IAAI,EAAE,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,KAAK,EAAE;AAACU,MAAAA,QAAQ,EAAC,UAAV;AAAsBG,MAAAA,KAAK,EAAC,CAA5B;AAA8BC,MAAAA,MAAM,EAAC,CAAC;AAAtC,KAAhD;AAA2F,IAAA,OAAO,EAAEpB,iBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CAHE;AASH;;AAEDJ,UAAU,CAACL,SAAX,GAAqB;AACjBM,EAAAA,IAAI,EAACN,SAAS,CAAC8B,MAAV,CAAiBC;AADL,CAArB;AAKA,eAAe1B,UAAf","sourcesContent":["import React, { useCallback,useEffect } from 'react';\nimport {Form, Input,Button} from 'antd'\nimport PropTypes from 'prop-types'\nimport useInput from '../hooks/useInput';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {ADD_COMMENT_REQUEST} from '../reducers/post'\n\nfunction CommetForm({post}) {\n\n    const dispatch =useDispatch();\n    const {addCommentDone,addCommentLoading}=useSelector((state)=>state.post)\n    const id=useSelector((state)=>state.user.me?.id)\n  \n    const [commentText,onChangeCommentText,setValue]=useInput('');\n    \n    const onSubmitComment=useCallback(()=>{\n        console.log('ssssssssss')\n\n        dispatch({\n            type:ADD_COMMENT_REQUEST,\n            data:{\n                content:commentText,\n                postId:post.id,\n                userId:id,\n                \n            }\n        })\n    },[commentText,id])\n\n    useEffect(()=>{\n        if(addCommentDone){\n            setValue('')\n        }\n    },[addCommentDone])\n\n    return( \n\n\n  <Form onFinish={onSubmitComment}>\n      <Form.Item style={{position:'relative' ,margin:0 ,zIndex:1}}>\n          <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\n          <Button type=\"primary\" htmlType='submit' style={{position:'absolute' ,right:0,bottom:-40}} loading={addCommentLoading}>짹짹</Button>\n      </Form.Item>\n  </Form>);\n}\n\nCommetForm.PropTypes={\n    post:PropTypes.object.isRequired,\n};\n\n\nexport default CommetForm;\n"]},"metadata":{},"sourceType":"module"}
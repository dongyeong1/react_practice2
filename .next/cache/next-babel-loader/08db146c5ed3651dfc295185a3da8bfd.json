{"ast":null,"code":"// import { applyMiddleware, createStore, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { createStore } from 'redux'; // import { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducer from '../reducers';\n\nvar configureStore = function configureStore() {\n  var store = createStore(reducer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","createStore","reducer","configureStore","store","wrapper","debug"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAAOC,WAAP,QAAyB,OAAzB,C,CACA;;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAG3B,MAAMC,KAAK,GAAGH,WAAW,CAACC,OAAD,CAAzB;AAEA,SAAOE,KAAP;AACD,CAND;;AAQA,IAAMC,OAAO,GAAGL,aAAa,CAACG,cAAD,EAAiB;AAAEG,EAAAA,KAAK;AAAP,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["// import { applyMiddleware, createStore, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport{createStore} from 'redux'\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  \n \n  const store = createStore(reducer);\n \n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === 'development' });\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}
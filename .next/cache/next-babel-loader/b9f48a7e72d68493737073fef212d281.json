{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/dong/nodebird/prepare/front/component/CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nfunction CommetForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone;\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1],\n      setValue = _useInput2[2];\n\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  useEffect(function () {\n    if (addCommentDone) {\n      setValue('');\n    }\n  }, [addCommentDone]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"\\uC9F9\\uC9F9\")));\n}\n\n_s(CommetForm, \"zJaKUyKBpqJu0MReRN/WgcCeDOo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput];\n});\n\n_c = CommetForm;\nCommetForm.PropTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommetForm\");","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/component/CommentForm.js"],"names":["React","useCallback","useEffect","Form","Input","Button","PropTypes","useInput","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommetForm","post","dispatch","state","addCommentDone","id","user","me","commentText","onChangeCommentText","setValue","onSubmitComment","type","data","content","postId","userId","position","margin","right","bottom","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAoBC,MAApB,QAAiC,MAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;;AAEA,SAASC,UAAT,OAA4B;AAAA;;AAAA,MAAPC,IAAO,QAAPA,IAAO;AAExB,MAAMC,QAAQ,GAAEJ,WAAW,EAA3B;;AACA,qBAAuBD,WAAW,CAAC,UAACM,KAAD;AAAA,WAASA,KAAK,CAACF,IAAf;AAAA,GAAD,CAAlC;AAAA,MAAOG,cAAP,gBAAOA,cAAP;;AACA,MAAMC,EAAE,GAACR,WAAW,CAAC,UAACM,KAAD;AAAA;;AAAA,6BAASA,KAAK,CAACG,IAAN,CAAWC,EAApB,mDAAS,eAAeF,EAAxB;AAAA,GAAD,CAApB;;AAEA,kBAAiDT,QAAQ,CAAC,EAAD,CAAzD;AAAA;AAAA,MAAOY,WAAP;AAAA,MAAmBC,mBAAnB;AAAA,MAAuCC,QAAvC;;AAEA,MAAMC,eAAe,GAACrB,WAAW,CAAC,YAAI;AAElCY,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAACb,mBADA;AAELc,MAAAA,IAAI,EAAC;AACDC,QAAAA,OAAO,EAACN,WADP;AAEDO,QAAAA,MAAM,EAACd,IAAI,CAACI,EAFX;AAGDW,QAAAA,MAAM,EAACX;AAHN;AAFA,KAAD,CAAR;AASH,GAXgC,EAW/B,CAACG,WAAD,EAAaH,EAAb,CAX+B,CAAjC;AAaAd,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGa,cAAH,EAAkB;AACdM,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAJQ,EAIP,CAACN,cAAD,CAJO,CAAT;AAMA,SAGF,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEO,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAACM,MAAAA,QAAQ,EAAC,UAAV;AAAsBC,MAAAA,MAAM,EAAC;AAA7B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEV,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAmE,IAAA,IAAI,EAAE,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,KAAK,EAAE;AAACQ,MAAAA,QAAQ,EAAC,UAAV;AAAsBE,MAAAA,KAAK,EAAC,CAA5B;AAA8BC,MAAAA,MAAM,EAAC,CAAC;AAAtC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CAHE;AASH;;GApCQpB,U;UAEWF,W,EACOD,W,EACdA,W,EAEwCD,Q;;;KAN5CI,U;AAsCTA,UAAU,CAACL,SAAX,GAAqB;AACjBM,EAAAA,IAAI,EAACN,SAAS,CAAC0B,MAAV,CAAiBC;AADL,CAArB;AAKA,eAAetB,UAAf","sourcesContent":["import React, { useCallback,useEffect } from 'react';\nimport {Form, Input,Button} from 'antd'\nimport PropTypes from 'prop-types'\nimport useInput from '../hooks/useInput';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {ADD_COMMENT_REQUEST} from '../reducers/post'\n\nfunction CommetForm({post}) {\n\n    const dispatch =useDispatch();\n    const {addCommentDone}=useSelector((state)=>state.post)\n    const id=useSelector((state)=>state.user.me?.id)\n  \n    const [commentText,onChangeCommentText,setValue]=useInput('');\n    \n    const onSubmitComment=useCallback(()=>{\n\n        dispatch({\n            type:ADD_COMMENT_REQUEST,\n            data:{\n                content:commentText,\n                postId:post.id,\n                userId:id,\n                \n            }\n        })\n    },[commentText,id])\n\n    useEffect(()=>{\n        if(addCommentDone){\n            setValue('')\n        }\n    },[addCommentDone])\n\n    return( \n\n\n  <Form onFinish={onSubmitComment}>\n      <Form.Item style={{position:'relative' ,margin:0 }}>\n          <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\n          <Button type=\"primary\" htmlType='submit' style={{position:'absolute' ,right:0,bottom:-40}}>짹짹</Button>\n      </Form.Item>\n  </Form>);\n}\n\nCommetForm.PropTypes={\n    post:PropTypes.object.isRequired,\n};\n\n\nexport default CommetForm;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/dong/nodebird/prepare/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../component/AppLayout';\nimport PostForm from '../component/PostForm';\nimport PostCard from '../component/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\nfunction index() {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 20\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    post: post,\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 36\n    }\n  })));\n}\n\nexport default index;","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","LOAD_USER_REQUEST","index","me","state","user","mainPosts","hasMorePosts","loadPostsLoading","post","dispatch","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAGA,SAASC,KAAT,GAAiB;AACb,QAAM;AAACC,IAAAA;AAAD,MAAMP,WAAW,CAAEQ,KAAD,IAASA,KAAK,CAACC,IAAhB,CAAvB;AACA,QAAM;AAACC,IAAAA,SAAD;AAAWC,IAAAA,YAAX;AAAwBC,IAAAA;AAAxB,MAA0CZ,WAAW,CAAEQ,KAAD,IAASA,KAAK,CAACK,IAAhB,CAA3D;AACA,QAAMC,QAAQ,GAACf,WAAW,EAA1B;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVgB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACX;AADA,KAAD,CAAR;AAGH,GAJQ,EAIP,EAJO,CAAT;AAMAN,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAID,GALM,EAKJ,EALI,CAAT;AAQAP,EAAAA,SAAS,CAAC,MAAI;AACV,aAASkB,QAAT,GAAmB;AACf,UAAGC,MAAM,CAACC,OAAP,GAAeC,QAAQ,CAACC,eAAT,CAAyBC,YAAxC,GAAqDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAsC,GAA9F,EAAkG;AAC9F,YAAGX,YAAY,IAAI,CAACC,gBAApB,EAAqC;AACjCE,UAAAA,QAAQ,CAAC;AACLC,YAAAA,IAAI,EAACX;AADA,WAAD,CAAR;AAGA;AACP;AACJ;;AACDa,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAiCP,QAAjC;AACA,WAAM,MAAI;AACVC,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAoCR,QAApC;AACC,KAFD;AAGC,GAdI,EAcH,CAACL,YAAD,EAAcC,gBAAd,CAdG,CAAT;AAgBA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAEIG,SAAS,CAACe,GAAV,CAAeZ,IAAD,IAAS,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,GAAG,EAAEA,IAAI,CAACa,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAFJ,CADJ;AAOH;;AAED,eAAepB,KAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport AppLayout from '../component/AppLayout'\nimport PostForm from '../component/PostForm'\nimport PostCard from '../component/PostCard'\nimport { LOAD_POSTS_REQUEST } from '../reducers/post'\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\n\nfunction index() {\n    const {me} =useSelector((state)=>state.user);\n    const {mainPosts,hasMorePosts,loadPostsLoading}=useSelector((state)=>state.post)\n    const dispatch=useDispatch()\n    useEffect(()=>{\n        dispatch({\n            type:LOAD_POSTS_REQUEST\n        })\n    },[])\n\n    useEffect(() => {\n        dispatch({\n          type: LOAD_USER_REQUEST,\n        });\n       \n      }, []);\n    \n\n    useEffect(()=>{\n        function onScroll(){\n            if(window.scrollY+document.documentElement.clientHeight>document.documentElement.scrollHeight-300){\n                if(hasMorePosts && !loadPostsLoading){\n                    dispatch({\n                        type:LOAD_POSTS_REQUEST\n                    })\n                   }\n            }\n        }\n        window.addEventListener('scroll',onScroll)\n        return()=>{\n        window.removeEventListener('scroll',onScroll)    \n        }\n        },[hasMorePosts,loadPostsLoading])\n  \n    return (\n        <AppLayout>\n            {me  &&<PostForm />}\n           {mainPosts.map((post)=> <PostCard post={post} key={post.id}/> )}\n        </AppLayout>\n        \n    )\n}\n\nexport default index\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/dong/nodebird/prepare/front/component/PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\nimport { StarTwoTone } from '@ant-design/icons';\n\nfunction PostForm() {\n  _s();\n\n  var _this = this;\n\n  var imageInput = useRef();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addPostDone = _useSelector.addPostDone;\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var dispatch = useDispatch();\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector2.imagePaths;\n\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost(text)); // setText('');\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4\\uC77C\\uC774\\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0\\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      \"float\": 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }));\n  })));\n}\n\n_s(PostForm, \"z6+0+/M9OdEu+jrc9Cg/u5e9mdY=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/component/PostForm.js"],"names":["React","useCallback","useState","useRef","useEffect","Form","Input","Button","useDispatch","useSelector","addPost","StarTwoTone","PostForm","imageInput","text","setText","state","post","addPostDone","dispatch","imagePaths","onChangeText","e","target","value","onClickImageUpload","current","click","onSubmit","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import React,{useCallback,useState,useRef, useEffect} from 'react';\nimport {Form,Input,Button} from 'antd'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {addPost} from '../reducers/post'\nimport { StarTwoTone } from '@ant-design/icons';\n\n\nfunction PostForm() {\n\n    const imageInput=useRef();\n    const[text,setText]=useState('')\n\n\n    const {addPostDone}=useSelector((state)=>state.post)\n\n    useEffect(()=>{\nif(addPostDone){\n    setText('')\n}\n    },[addPostDone])\n\n    const dispatch=useDispatch();\n    const {imagePaths} =useSelector((state)=>state.post)\n    const onChangeText=useCallback((e)=>{\n        setText(e.target.value)\n    },[])\n\n    const onClickImageUpload=useCallback(()=>{\n        imageInput.current.click()\n    },[imageInput.current])\n\n    const onSubmit=useCallback(()=>{\n        dispatch(addPost(text))\n        // setText('');\n\n    },[])\n  return (\n      <Form style={{margin:'10px 0 20px'}} encType='multipart/form-data' onFinish={onSubmit}>\n        <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder='어떤일이있었나요?' />\n        <div>\n            <input type=\"file\" multiple hidden ref={imageInput} />\n                <Button onClick={onClickImageUpload}>이미지업로드</Button>\n                <Button type=\"primary\" htmlType=\"submit\" style={{float:'right'}}>짹짹</Button>\n            \n        </div>\n        <div>\n            {imagePaths.map((v)=>(\n                <div key={v} style={{display:'inline-block'}}>\n                    <img src={v} style={{width:'200px'}} alt={v}></img>\n                </div>\n            ))}\n        </div>\n        \n      </Form>\n  );\n}\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/dong/nodebird/prepare/front/component/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\nimport { StarTwoTone } from '@ant-design/icons';\n\nfunction PostForm() {\n  const imageInput = useRef();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    addPostDone\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const dispatch = useDispatch();\n  const {\n    imagePaths\n  } = useSelector(state => state.post);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onSubmit = useCallback(() => {\n    console.log('text', text);\n    dispatch(addPost(text)); // setText('');\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4\\uC77C\\uC774\\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0\\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: v,\n    style: {\n      width: '200px'\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  })))));\n}\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/component/PostForm.js"],"names":["React","useCallback","useState","useRef","useEffect","Form","Input","Button","useDispatch","useSelector","addPost","StarTwoTone","PostForm","imageInput","text","setText","addPostDone","state","post","dispatch","imagePaths","onChangeText","e","target","value","onClickImageUpload","current","click","onSubmit","console","log","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React,{useCallback,useState,useRef, useEffect} from 'react';\nimport {Form,Input,Button} from 'antd'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {addPost} from '../reducers/post'\nimport { StarTwoTone } from '@ant-design/icons';\n\n\nfunction PostForm() {\n\n    const imageInput=useRef();\n    const[text,setText]=useState('')\n\n\n    const {addPostDone}=useSelector((state)=>state.post)\n\n    useEffect(()=>{\nif(addPostDone){\n    setText('')\n}\n    },[addPostDone])\n\n    const dispatch=useDispatch();\n    const {imagePaths} =useSelector((state)=>state.post)\n    const onChangeText=useCallback((e)=>{\n        setText(e.target.value)\n    },[])\n\n    const onClickImageUpload=useCallback(()=>{\n        imageInput.current.click()\n    },[imageInput.current])\n\n    const onSubmit=useCallback(()=>{\n        console.log('text',text)\n        dispatch(addPost(text))\n        // setText('');\n\n    },[])\n  return (\n      <Form style={{margin:'10px 0 20px'}} encType='multipart/form-data' onFinish={onSubmit}>\n        <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder='어떤일이있었나요?' />\n        <div>\n            <input type=\"file\" multiple hidden ref={imageInput} />\n                <Button onClick={onClickImageUpload}>이미지업로드</Button>\n                <Button type=\"primary\" htmlType=\"submit\" style={{float:'right'}}>짹짹</Button>\n            \n        </div>\n        <div>\n            {imagePaths.map((v)=>(\n                <div key={v} style={{display:'inline-block'}}>\n                    <img src={v} style={{width:'200px'}} alt={v}></img>\n                </div>\n            ))}\n        </div>\n        \n      </Form>\n  );\n}\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}
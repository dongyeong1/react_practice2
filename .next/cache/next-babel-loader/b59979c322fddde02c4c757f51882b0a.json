{"ast":null,"code":"var _jsxFileName = \"/Users/dong/nodebird/prepare/front/pages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../component/AppLayout';\nimport PostForm from '../component/PostForm';\nimport PostCard from '../component/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nfunction index() {\n  _s();\n\n  var _this = this;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight) {\n        if (hasMorePosts) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }\n  }), mainPosts.map(function (post) {\n    return __jsx(PostCard, {\n      post: post,\n      key: post.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 36\n      }\n    });\n  }));\n}\n\n_s(index, \"PYdTsbuplpq9+mV6v/bi1iCh05M=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\nexport default index;","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","index","state","user","me","post","mainPosts","hasMorePosts","dispatch","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","id"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AAAA;;AACb,qBAAYL,WAAW,CAAC,UAACM,KAAD;AAAA,WAASA,KAAK,CAACC,IAAf;AAAA,GAAD,CAAvB;AAAA,MAAOC,EAAP,gBAAOA,EAAP;;AACA,sBAA+BR,WAAW,CAAC,UAACM,KAAD;AAAA,WAASA,KAAK,CAACG,IAAf;AAAA,GAAD,CAA1C;AAAA,MAAOC,SAAP,iBAAOA,SAAP;AAAA,MAAiBC,YAAjB,iBAAiBA,YAAjB;;AACA,MAAMC,QAAQ,GAACb,WAAW,EAA1B;AACAD,EAAAA,SAAS,CAAC,YAAI;AACVc,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACT;AADA,KAAD,CAAR;AAGH,GAJQ,EAIP,EAJO,CAAT;AAMAN,EAAAA,SAAS,CAAC,YAAI;AACV,aAASgB,QAAT,GAAmB;AACf,UAAGC,MAAM,CAACC,OAAP,GAAeC,QAAQ,CAACC,eAAT,CAAyBC,YAAxC,KAAuDF,QAAQ,CAACC,eAAT,CAAyBE,YAAnF,EAAgG;AAC5F,YAAGT,YAAH,EAAgB;AACZC,UAAAA,QAAQ,CAAC;AACLC,YAAAA,IAAI,EAACT;AADA,WAAD,CAAR;AAGA;AACP;AACJ;;AACDW,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAiCP,QAAjC;AACA,WAAM,YAAI;AACVC,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAoCR,QAApC;AACC,KAFD;AAGC,GAdI,EAcH,CAACH,YAAD,CAdG,CAAT;AAgBA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAEIE,SAAS,CAACa,GAAV,CAAc,UAACd,IAAD;AAAA,WAAS,MAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,GAAG,EAAEA,IAAI,CAACe,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AAAA,GAAd,CAFJ,CADJ;AAOH;;GAjCQnB,K;UACOL,W,EACmBA,W,EAChBD,W;;;AAgCnB,eAAeM,KAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport AppLayout from '../component/AppLayout'\nimport PostForm from '../component/PostForm'\nimport PostCard from '../component/PostCard'\nimport { LOAD_POSTS_REQUEST } from '../reducers/post'\n\n\nfunction index() {\n    const {me} =useSelector((state)=>state.user);\n    const {mainPosts,hasMorePosts}=useSelector((state)=>state.post)\n    const dispatch=useDispatch()\n    useEffect(()=>{\n        dispatch({\n            type:LOAD_POSTS_REQUEST\n        })\n    },[])\n\n    useEffect(()=>{\n        function onScroll(){\n            if(window.scrollY+document.documentElement.clientHeight===document.documentElement.scrollHeight){\n                if(hasMorePosts){\n                    dispatch({\n                        type:LOAD_POSTS_REQUEST\n                    })\n                   }\n            }\n        }\n        window.addEventListener('scroll',onScroll)\n        return()=>{\n        window.removeEventListener('scroll',onScroll)    \n        }\n        },[hasMorePosts])\n  \n    return (\n        <AppLayout>\n            {me  &&<PostForm />}\n           {mainPosts.map((post)=> <PostCard post={post} key={post.id}/> )}\n        </AppLayout>\n        \n    )\n}\n\nexport default index\n"]},"metadata":{},"sourceType":"module"}
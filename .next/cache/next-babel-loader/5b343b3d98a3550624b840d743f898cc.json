{"ast":null,"code":"import shortid from \"shortid\";\nimport produce from \"immer\";\nimport faker from 'faker';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '김동영'\n    },\n    content: '첫 번째 게시글',\n    Images: [{\n      id: shortid.generate(),\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      id: shortid.generate(),\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      id: shortid.generate(),\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      id: shortid.generate(),\n      User: {\n        id: shortid.generate(),\n        nickname: 'nero'\n      },\n      content: '우와 개정판이 나왔군요~'\n    }, {\n      id: shortid.generate(),\n      User: {\n        id: shortid.generate(),\n        nickname: 'hero'\n      },\n      content: '얼른 사고싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\ninitialState.mainPosts.concat(Array(20).fill().map(function (v, i) {\n  return {\n    id: shortid.generate(),\n    User: {\n      id: shortid.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.paragraph(),\n    Images: [{\n      src: faker.image.imageUrl()\n    }],\n    Comments: [{\n      User: {\n        id: shortid.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph()\n    }]\n  };\n}));\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '황현종'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortid.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: '황현종'\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/reducers/post.js"],"names":["shortid","produce","faker","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","concat","Array","fill","map","v","i","name","findName","lorem","paragraph","image","imageUrl","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","loadPostsLoading","loadPostsDone","loadPostsError","hasMorePosts","length","error","unshift","filter","post","find","postId"],"mappings":"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","sourcesContent":["import shortid from \"shortid\";\nimport produce  from \"immer\";\nimport faker from 'faker';\n\nexport const initialState={\n    mainPosts: [{\n        id: 1,\n        User: {\n          id: 1,\n          nickname: '김동영',\n        },\n        content: '첫 번째 게시글',\n        Images: [{\n          id:shortid.generate(), \n\n          src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n        }, {\n          id:shortid.generate(), \n\n\n          src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n        }, {\n          id:shortid.generate(), \n\n          src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\n        }],\n        Comments: [{\n          id:shortid.generate(), \n          User: {\n            id:shortid.generate(), \n\n            nickname: 'nero',\n          },\n          content: '우와 개정판이 나왔군요~',\n        }, {\n          id:shortid.generate(), \n\n          User: {\n            id:shortid.generate(), \n \n            nickname: 'hero',\n          },\n          content: '얼른 사고싶어요~',\n        }]\n      }],\n      imagePaths: [],\n      addPostLoading:false,\n      addPostDone:false,\n      addPostError:null,\n      removePostLoading:false,\n      removePostDone:false,\n      removePostError:null,\n      addCommentLoading:false,\n      addCommentDone:false,\n      addCommentError:null,\n    }\n\nexport const ADD_POST_REQUEST ='ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS ='ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE ='ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST ='REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS ='REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE ='REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\ninitialState.mainPosts.concat(\n  Array(20).fill().map((v,i)=>({\n    id:shortid.generate(),\n    User:{\n      id:shortid.generate(),\n      nickname:faker.name.findName()\n    },\n    content:faker.lorem.paragraph(),\n    Images:[\n      {\n        src:faker.image.imageUrl()\n      }\n    ],\n    Comments:[{\n      User:{\n        id:shortid.generate(),\n        nickname:faker.name.findName()\n      },\n      content:faker.lorem.paragraph()\n    }]\n  }))\n)\n\n\nexport const addPost=(data)=>{\n   return{\n    type :ADD_POST_REQUEST,\n    data\n   }\n}\n\nexport const addComment=(data)=>{\n  return{\n   type :ADD_COMMENT_REQUEST,\n   data\n  }\n}\n\n\nconst dummyPost =(data)=>( \n  \n  {\n  \n    id: data.id,\n    content: data.content ,\n    User: {\n      id: 1,\n      nickname: '황현종',\n    },\n    Images: [],\n    Comments: [],\n  });\n\nconst dummyComment=(data)=>({\n  id: shortid.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: '황현종',\n  },\n  \n})\n  \n\n\n\nconst reducer=(state=initialState,action)=>{\n  return produce(state,(draft)=>{\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n        // const post = { ...state.mainPosts[postIndex] };\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n        // return {\n        //   ...state,\n        //   mainPosts,\n        //   addCommentLoading: false,\n        //   addCommentDone: true,\n        // };\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        break;\n    }\n\n  });\n   \n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}
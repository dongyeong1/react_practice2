{"ast":null,"code":"var _jsxFileName = \"/Users/dong/nodebird/prepare/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../component/AppLayout';\nimport PostForm from '../component/PostForm';\nimport PostCard from '../component/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nfunction index() {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight) {\n        if (hasMorePosts) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, []);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    post: post,\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 36\n    }\n  })));\n}\n\nexport default index;","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","index","me","state","user","mainPosts","hasMorePosts","post","dispatch","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAGA,SAASC,KAAT,GAAiB;AACb,QAAM;AAACC,IAAAA;AAAD,MAAMN,WAAW,CAAEO,KAAD,IAASA,KAAK,CAACC,IAAhB,CAAvB;AACA,QAAM;AAACC,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAyBV,WAAW,CAAEO,KAAD,IAASA,KAAK,CAACI,IAAhB,CAA1C;AACA,QAAMC,QAAQ,GAACb,WAAW,EAA1B;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVc,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACT;AADA,KAAD,CAAR;AAGH,GAJQ,EAIP,EAJO,CAAT;AAMAN,EAAAA,SAAS,CAAC,MAAI;AACV,aAASgB,QAAT,GAAmB;AACf,UAAGC,MAAM,CAACC,OAAP,GAAeC,QAAQ,CAACC,eAAT,CAAyBC,YAAxC,KAAuDF,QAAQ,CAACC,eAAT,CAAyBE,YAAnF,EAAgG;AAC5F,YAAGV,YAAH,EAAgB;AACZE,UAAAA,QAAQ,CAAC;AACLC,YAAAA,IAAI,EAACT;AADA,WAAD,CAAR;AAGA;AACP;AACJ;;AACDW,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAiCP,QAAjC;AACA,WAAM,MAAI;AACVC,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAoCR,QAApC;AACC,KAFD;AAGC,GAdI,EAcH,EAdG,CAAT;AAgBA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAEIG,SAAS,CAACc,GAAV,CAAeZ,IAAD,IAAS,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,GAAG,EAAEA,IAAI,CAACa,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAFJ,CADJ;AAOH;;AAED,eAAenB,KAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport AppLayout from '../component/AppLayout'\nimport PostForm from '../component/PostForm'\nimport PostCard from '../component/PostCard'\nimport { LOAD_POSTS_REQUEST } from '../reducers/post'\n\n\nfunction index() {\n    const {me} =useSelector((state)=>state.user);\n    const {mainPosts,hasMorePosts}=useSelector((state)=>state.post)\n    const dispatch=useDispatch()\n    useEffect(()=>{\n        dispatch({\n            type:LOAD_POSTS_REQUEST\n        })\n    },[])\n\n    useEffect(()=>{\n        function onScroll(){\n            if(window.scrollY+document.documentElement.clientHeight===document.documentElement.scrollHeight){\n                if(hasMorePosts){\n                    dispatch({\n                        type:LOAD_POSTS_REQUEST\n                    })\n                   }\n            }\n        }\n        window.addEventListener('scroll',onScroll)\n        return()=>{\n        window.removeEventListener('scroll',onScroll)    \n        }\n        },[])\n  \n    return (\n        <AppLayout>\n            {me  &&<PostForm />}\n           {mainPosts.map((post)=> <PostCard post={post} key={post.id}/> )}\n        </AppLayout>\n        \n    )\n}\n\nexport default index\n"]},"metadata":{},"sourceType":"module"}
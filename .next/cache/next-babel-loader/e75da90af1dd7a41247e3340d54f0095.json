{"ast":null,"code":"import { all, delay, put, takeLatest, fork } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, generateDummyPost, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS } from '../reducers/post';\n\nfunction addPostAPI() {// return axios.post('/api/post',data)\n}\n\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/sagas/post.js"],"names":["all","delay","put","takeLatest","fork","axios","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","generateDummyPost","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","addPostAPI","addPost","action","type","data","err","response","addCommentAPI","post","postId","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,GAArB,EAA0BC,UAA1B,EAAqCC,IAArC,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,gBAJJ,EAKIC,gBALJ,EAMIC,gBANJ,EAOIC,iBAPJ,EAQIC,kBARJ,EASIC,kBATJ,EAUIC,kBAVJ,EAWIC,mBAXJ,EAYIC,mBAZJ,EAaIC,mBAbJ,QAcS,kBAdT;;AAgBA,SAASC,UAAT,GAAqB,CACjB;AACH;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAAyB;AACrB,MAAG;AACC,UAAMpB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNoB,MAAAA,IAAI,EAACX,gBADC;AAENY,MAAAA,IAAI,EAACF,MAAM,CAACE;AAFN,KAAD,CAAT;AAIH,GAND,CAMC,OAAMC,GAAN,EAAU;AACP,UAAMtB,GAAG,CAAC;AACNoB,MAAAA,IAAI,EAACb,gBADC;AAENc,MAAAA,IAAI,EAACC,GAAG,CAACC,QAAJ,CAAaF;AAFZ,KAAD,CAAT;AAIH;AACJ;;AAGD,SAASG,aAAT,CAAuBH,IAAvB,EAA6B;AACzB,SAAOlB,KAAK,CAACsB,IAAN,CAAY,aAAYJ,IAAI,CAACK,MAAO,UAApC,EAA+CL,IAA/C,CAAP;AACD;;AAED,UAAUM,UAAV,CAAqBR,MAArB,EAA6B;AAC3B,MAAI;AACF;AACA,UAAMpB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEd,mBADE;AAERe,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMtB,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEhB,mBADE;AAERiB,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF;AAFX,KAAD,CAAT;AAID;AACF;;AAGD,UAAUO,YAAV,GAAwB;AACtB,QAAM3B,UAAU,CAACO,gBAAD,EAAkBU,OAAlB,CAAhB;AACH;;AACD,UAAUW,eAAV,GAA2B;AACvB,QAAM5B,UAAU,CAACI,mBAAD,EAAqBsB,UAArB,CAAhB;AACH;;AAED,eAAe,UAAUG,QAAV,GAAoB;AAC/B,QAAMhC,GAAG,CAAC,CACNI,IAAI,CAAC0B,YAAD,CADE,EAEN1B,IAAI,CAAC2B,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, delay, put, takeLatest,fork } from \"redux-saga/effects\";\nimport axios from 'axios'\nimport {\n    ADD_COMMENT_FAILURE,\n    ADD_COMMENT_REQUEST,\n    ADD_COMMENT_SUCCESS,\n    ADD_POST_FAILURE,\n    ADD_POST_REQUEST,\n    ADD_POST_SUCCESS,\n    generateDummyPost,\n    LOAD_POSTS_FAILURE,\n    LOAD_POSTS_REQUEST,\n    LOAD_POSTS_SUCCESS,\n    REMOVE_POST_FAILURE,\n    REMOVE_POST_REQUEST,\n    REMOVE_POST_SUCCESS,\n  } from '../reducers/post';\n\nfunction addPostAPI(){\n    // return axios.post('/api/post',data)\n}\n\nfunction* addPost(action){\n    try{\n        yield delay(1000)\n        yield put({\n            type:ADD_POST_SUCCESS,\n            data:action.data\n        })\n    }catch(err){\n        yield put({\n            type:ADD_POST_FAILURE,\n            data:err.response.data,\n        })\n    }\n}\n\n\nfunction addCommentAPI(data) {\n    return axios.post(`/api/post/${data.postId}/comment`, data);\n  }\n  \n  function* addComment(action) {\n    try {\n      // const result = yield call(addCommentAPI, action.data);\n      yield delay(1000);\n      yield put({\n        type: ADD_COMMENT_SUCCESS,\n        data: action.data,\n      });\n    } catch (err) {\n      yield put({\n        type: ADD_COMMENT_FAILURE,\n        data: err.response.data,\n      });\n    }\n  }\n  \n \n  function* watchAddPost(){\n    yield takeLatest(ADD_POST_REQUEST,addPost)\n}\nfunction* watchAddComment(){\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment)\n}\n\nexport default function* postSaga(){\n    yield all([\n        fork(watchAddPost),\n        fork(watchAddComment),\n    ])\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/dong/nodebird/prepare/front/component/PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Card, Button, Avatar, Popover } from 'antd';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport PostImages from './PostImages';\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    return state.user.me && state.user.me.id;\n  });\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFromOpened = _useState2[1];\n\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 32\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }), __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), //popover는 ...에 마우스올렸을때 더보기뜨는것\n    __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(PostCard, \"M1lgmM7Rc7tkhEWsGEbAg9vLyAE=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/dong/nodebird/prepare/front/component/PostCard.js"],"names":["React","useState","PropTypes","useSelector","Card","Button","Avatar","Popover","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","PostImages","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpened","setCommentFromOpened","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport PropTypes from 'prop-types'\nimport { useSelector } from 'react-redux';\nimport { Card, Button, Avatar, Popover} from 'antd';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport PostImages from './PostImages';\n\nconst PostCard=({post})=> {\n    const id =useSelector((state)=>state.user.me && state.user.me.id)\n\n    const[liked,setLiked]=useState(false);\n    const [commentFormOpened,setCommentFromOpened]=useState(false)\n\n  return (\n    <div style={{marginBottom:10}}>\n      <Card\n      cover={post.Images[0] && <PostImages images={post.Images} />}\n      \n      actions={[\n        <RetweetOutlined key=\"retweet\" />,\n       \n          <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" />,\n          <HeartOutlined key=\"heart\"  />,\n        <MessageOutlined key=\"message\"  />,\n        //popover는 ...에 마우스올렸을때 더보기뜨는것\n        <Popover\n          key=\"ellipsis\"\n          content={(\n            <Button.Group>\n              {id && post.User.id === id\n                ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\">삭제</Button>\n                  </>\n                )\n                : <Button>신고</Button>}\n            </Button.Group>\n          )}\n        >\n          <EllipsisOutlined />\n        </Popover>,\n      ]}\n      >\n          <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n          />\n          </Card>\n        {/* <Image /> */}\n        {/* <Content /> */}\n        {/* <Buttons />  */}\n      \n        {/* <CommentForm/> */}\n        {/* <Comment/> */}\n    </div>\n  )\n}\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n      id: PropTypes.number,\n      User: PropTypes.object,\n      content: PropTypes.string,\n      createdAt: PropTypes.object,\n      Comments: PropTypes.arrayOf(PropTypes.object),\n      Images: PropTypes.arrayOf(PropTypes.object),\n    }).isRequired,\n  };\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}